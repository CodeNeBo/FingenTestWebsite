---
import { Icon } from 'astro-icon';
interface Item {
  description?: string;
  icon?: string;
}
export interface Props {
  title?: string;
  items?: Array<Item>;
  image?: string | any;
}
const {
  title = await Astro.slots.render('title'),
  items = [],
} = Astro.props;
---

<section class:list={['px-4 py-16 sm:px-6 mx-auto lg:px-8 lg:py-20 max-w-6xl']}>
  <div class="max-w-lg sm:mx-auto lg:max-w-xl">
    {
      (title) && (
        <div class="mb-10 md:mx-auto text-center md:mb-12 max-w-3xl">
          {title && (
            <h2
              class="text-4xl md:text-5xl font-bold leading-tighter tracking-tighter mb-4 font-heading"
              set:html={title}
            />
          )}
        </div>
      )
    }
  </div>

  <div class="mx-auto max-w-7xl">
    <div class="">
      <div class="self-center">
        {
          items && (
            <div class="grid md:grid-cols-3 gap-8">
              {items.map(({ description, icon }) => (
                <div class="bg-[#0B0B14] border-[#1C1C24] border rounded grid grid-rows-2 justify-items-center items-center">
                  <div class="flex-shrink-0">
                    <div class="flex h-12 w-12 md:h-16 md:w-16 items-center justify-center bg-[#EC458D] rounded-full mt-2">
                      <Icon name={icon ? icon : 'tabler:question-mark'} class="w-8 h-8 md:w-12 md:h-12" />
                    </div>
                  </div>
                  <div class=" mx-2 mb-2 md:mx-4 md:mb-4 self-start">
                    {description && <p class="mt-2 text-muted text-center" set:html={description} />}
                  </div>
                </div>
              ))}
            </div>
          )
        }
      </div>
    </div>
  </div>
</section>