---
import { Icon } from 'astro-icon';
interface Item {
  name?: string;
  description?: string;
  icon?: string;
}
export interface Props {
  title?: string;
  items?: Array<Item>;
  image?: string | any;
}
const {
  title = await Astro.slots.render('title'),
  items = [],
} = Astro.props;
---

<section id="faq" class:list={['px-4 pb-16 sm:px-6 mx-auto lg:px-8 lg:pb-20 max-w-6xl opacity-0 transition-all duration-1000 ease-out obsSection translate-y-10 snap-start']}>
  <div class="max-w-xl sm:mx-auto lg:max-w-2xl">
    {
      (title) && (
        <div class="mb-10 md:mx-auto text-center md:mb-12 max-w-3xl">
          {title && (
            <h2
              class="text-4xl md:text-5xl font-bold leading-tighter tracking-tighter mb-4 font-heading"
              set:html={title}
            />
          )}
        </div>
      )
    }
  </div>

  <div class="mx-auto max-w-7xl">
    {items.map(({ name, description, icon }, index) => (
      <details class="self-center w-full flex items-middle bg-[#0B0B14] border-[#1C1C24] border rounded-xl h-fit mb-4" key={index}>
        <summary class="cursor-pointer list-none px-8 py-6">
          <div class="flex justify-between items-center">
            {name && <p class="text-justify text-xl font-bold" set:html={name} />}
            <div class="flex-shrink-0">
              <Icon name={icon ? icon : 'tabler:chevron-down'} class="w-8 h-8" />
            </div>
          </div>
        </summary>
        {
          (description) && (
            <div>
              {title && (
                <hr class="border-[#1C1C24]" />
              )}
              <p
                class="px-8 py-6 text-muted"
                set:html={description}
              />
            </div>
          )
        }
      </details>
    ))}
  </div>
</section>
